{"version":3,"file":"ClientConfigurationError.esm.js","sources":["../../../../../../node_modules/@azure/msal-common/dist/error/ClientConfigurationError.js"],"sourcesContent":["/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { ClientAuthError } from './ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create', 'none' and 'no_session'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: \"invalid_claims\",\r\n        desc: \"Given claims parameter must be a stringified JSON object.\"\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: \"invalid_authority_metadata\",\r\n        desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    },\r\n    invalidAzureCloudInstance: {\r\n        code: \"invalid_azure_cloud_instance\",\r\n        desc: \"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values\"\r\n    },\r\n    missingSshJwk: {\r\n        code: \"missing_ssh_jwk\",\r\n        desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\"\r\n    },\r\n    missingSshKid: {\r\n        code: \"missing_ssh_kid\",\r\n        desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\"\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: \"missing_nonce_authentication_header\",\r\n        desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\"\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: \"invalid_authentication_header\",\r\n        desc: \"Invalid authentication header provided\"\r\n    },\r\n    authorityMismatch: {\r\n        code: \"authority_mismatch\",\r\n        desc: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, \"\" + ClientConfigurationErrorMessage.emptyScopesError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Creates error thrown when claims parameter is not a stringified JSON object\r\n     */\r\n    ClientConfigurationError.createInvalidClaimsRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code, ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code, ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    /**\r\n     * Throws error when the AzureCloudInstance is set to an invalid value\r\n     */\r\n    ClientConfigurationError.createInvalidAzureCloudInstanceError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAzureCloudInstance.code, ClientConfigurationErrorMessage.invalidAzureCloudInstance.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\r\n     */\r\n    ClientConfigurationError.createMissingSshJwkError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code, ClientConfigurationErrorMessage.missingSshJwk.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\r\n     */\r\n    ClientConfigurationError.createMissingSshKidError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code, ClientConfigurationErrorMessage.missingSshKid.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided headers don't contain a header that a server nonce can be extracted from\r\n     */\r\n    ClientConfigurationError.createMissingNonceAuthenticationHeadersError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code, ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\r\n    };\r\n    /**\r\n     * Throws error when a provided header is invalid in any way\r\n     */\r\n    ClientConfigurationError.createInvalidAuthenticationHeaderError = function (invalidHeaderName, details) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code, ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc + \". Invalid header: \" + invalidHeaderName + \". Details: \" + details);\r\n    };\r\n    /**\r\n     * Create an error when the authority provided in request does not match authority provided in account or MSAL.js configuration.\r\n     */\r\n    ClientConfigurationError.createAuthorityMismatchError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityMismatch.code, ClientConfigurationErrorMessage.authorityMismatch.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\nexport { ClientConfigurationError, ClientConfigurationErrorMessage };\n//# sourceMappingURL=ClientConfigurationError.js.map\n"],"names":[],"mappings":";;;;;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,IAAC,+BAA+B,GAAG;AACtC,IAAI,iBAAiB,EAAE;AACvB,QAAQ,IAAI,EAAE,oBAAoB;AAClC,QAAQ,IAAI,EAAE,kEAAkE;AAChF,KAAK;AACL,IAAI,mBAAmB,EAAE;AACzB,QAAQ,IAAI,EAAE,uBAAuB;AACrC,QAAQ,IAAI,EAAE,0CAA0C;AACxD,KAAK;AACL,IAAI,yBAAyB,EAAE;AAC/B,QAAQ,IAAI,EAAE,8BAA8B;AAC5C,QAAQ,IAAI,EAAE,kDAAkD;AAChE,KAAK;AACL,IAAI,oBAAoB,EAAE;AAC1B,QAAQ,IAAI,EAAE,wBAAwB;AACtC,QAAQ,IAAI,EAAE,2NAA2N;AACzO,KAAK;AACL,IAAI,aAAa,EAAE;AACnB,QAAQ,IAAI,EAAE,iBAAiB;AAC/B,QAAQ,IAAI,EAAE,oDAAoD;AAClE,KAAK;AACL,IAAI,aAAa,EAAE;AACnB,QAAQ,IAAI,EAAE,iBAAiB;AAC/B,QAAQ,IAAI,EAAE,wBAAwB;AACtC,KAAK;AACL,IAAI,gBAAgB,EAAE;AACtB,QAAQ,IAAI,EAAE,0BAA0B;AACxC,QAAQ,IAAI,EAAE,gHAAgH;AAC9H,KAAK;AACL,IAAI,mBAAmB,EAAE;AACzB,QAAQ,IAAI,EAAE,6BAA6B;AAC3C,QAAQ,IAAI,EAAE,uCAAuC;AACrD,KAAK;AACL,IAAI,wBAAwB,EAAE;AAC9B,QAAQ,IAAI,EAAE,6BAA6B;AAC3C,QAAQ,IAAI,EAAE,mDAAmD;AACjE,KAAK;AACL,IAAI,aAAa,EAAE;AACnB,QAAQ,IAAI,EAAE,sBAAsB;AACpC,QAAQ,IAAI,EAAE,4RAA4R;AAC1S,KAAK;AACL,IAAI,oBAAoB,EAAE;AAC1B,QAAQ,IAAI,EAAE,gBAAgB;AAC9B,QAAQ,IAAI,EAAE,2DAA2D;AACzE,KAAK;AACL,IAAI,sBAAsB,EAAE;AAC5B,QAAQ,IAAI,EAAE,qBAAqB;AACnC,QAAQ,IAAI,EAAE,iDAAiD;AAC/D,KAAK;AACL,IAAI,uBAAuB,EAAE;AAC7B,QAAQ,IAAI,EAAE,sBAAsB;AACpC,QAAQ,IAAI,EAAE,2CAA2C;AACzD,KAAK;AACL,IAAI,0BAA0B,EAAE;AAChC,QAAQ,IAAI,EAAE,+BAA+B;AAC7C,QAAQ,IAAI,EAAE,mFAAmF;AACjG,KAAK;AACL,IAAI,0BAA0B,EAAE;AAChC,QAAQ,IAAI,EAAE,qBAAqB;AACnC,QAAQ,IAAI,EAAE,qGAAqG;AACnH,KAAK;AACL,IAAI,6BAA6B,EAAE;AACnC,QAAQ,IAAI,EAAE,kCAAkC;AAChD,QAAQ,IAAI,EAAE,qIAAqI;AACnJ,KAAK;AACL,IAAI,wBAAwB,EAAE;AAC9B,QAAQ,IAAI,EAAE,4BAA4B;AAC1C,QAAQ,IAAI,EAAE,yIAAyI;AACvJ,KAAK;AACL,IAAI,kBAAkB,EAAE;AACxB,QAAQ,IAAI,EAAE,qBAAqB;AACnC,QAAQ,IAAI,EAAE,4HAA4H;AAC1I,KAAK;AACL,IAAI,yBAAyB,EAAE;AAC/B,QAAQ,IAAI,EAAE,8BAA8B;AAC5C,QAAQ,IAAI,EAAE,qHAAqH;AACnI,KAAK;AACL,IAAI,aAAa,EAAE;AACnB,QAAQ,IAAI,EAAE,iBAAiB;AAC/B,QAAQ,IAAI,EAAE,6HAA6H;AAC3I,KAAK;AACL,IAAI,aAAa,EAAE;AACnB,QAAQ,IAAI,EAAE,iBAAiB;AAC/B,QAAQ,IAAI,EAAE,uJAAuJ;AACrK,KAAK;AACL,IAAI,gCAAgC,EAAE;AACtC,QAAQ,IAAI,EAAE,qCAAqC;AACnD,QAAQ,IAAI,EAAE,gLAAgL;AAC9L,KAAK;AACL,IAAI,2BAA2B,EAAE;AACjC,QAAQ,IAAI,EAAE,+BAA+B;AAC7C,QAAQ,IAAI,EAAE,wCAAwC;AACtD,KAAK;AACL,IAAI,iBAAiB,EAAE;AACvB,QAAQ,IAAI,EAAE,oBAAoB;AAClC,QAAQ,IAAI,EAAE,kPAAkP;AAChQ,KAAK;AACL,EAAE;AACF;AACA;AACA;AACG,IAAC,wBAAwB,kBAAkB,UAAU,MAAM,EAAE;AAChE,IAAI,SAAS,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;AAChD,IAAI,SAAS,wBAAwB,CAAC,SAAS,EAAE,YAAY,EAAE;AAC/D,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC;AACvE,QAAQ,KAAK,CAAC,IAAI,GAAG,0BAA0B,CAAC;AAChD,QAAQ,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,CAAC;AACzE,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,2BAA2B,GAAG,YAAY;AACvE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,iBAAiB,CAAC,IAAI,EAAE,+BAA+B,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC5J,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,qCAAqC,GAAG,YAAY;AACjF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,mBAAmB,CAAC,IAAI,EAAE,+BAA+B,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAChK,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,+BAA+B,GAAG,UAAU,uBAAuB,EAAE;AAClG,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,yBAAyB,CAAC,IAAI,EAAE,+BAA+B,CAAC,yBAAyB,CAAC,IAAI,GAAG,gBAAgB,GAAG,uBAAuB,CAAC,CAAC;AACzN,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,+BAA+B,GAAG,UAAU,SAAS,EAAE;AACpF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,IAAI,EAAE,+BAA+B,CAAC,oBAAoB,CAAC,IAAI,GAAG,cAAc,GAAG,SAAS,CAAC,CAAC;AAC/L,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,mBAAmB,GAAG,UAAU,aAAa,EAAE;AAC5E,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,aAAa,CAAC,IAAI,EAAE,+BAA+B,CAAC,aAAa,CAAC,IAAI,GAAG,gBAAgB,GAAG,aAAa,CAAC,CAAC;AACvL,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,mBAAmB,GAAG,YAAY;AAC/D,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,aAAa,CAAC,IAAI,EAAE,+BAA+B,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpJ,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,2BAA2B,GAAG,YAAY;AACvE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,GAAG,+BAA+B,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC/J,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,8BAA8B,GAAG,UAAU,WAAW,EAAE;AACrF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,wBAAwB,CAAC,IAAI,EAAE,+BAA+B,CAAC,wBAAwB,CAAC,IAAI,GAAG,iBAAiB,GAAG,WAAW,CAAC,CAAC;AAC5M,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,wBAAwB,GAAG,UAAU,WAAW,EAAE;AAC/E,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,aAAa,CAAC,IAAI,EAAE,+BAA+B,CAAC,aAAa,CAAC,IAAI,GAAG,gBAAgB,GAAG,WAAW,CAAC,CAAC;AACrL,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,+BAA+B,GAAG,YAAY;AAC3E,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,IAAI,EAAE,+BAA+B,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAClK,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,6BAA6B,GAAG,YAAY;AACzE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,uBAAuB,CAAC,IAAI,EAAE,+BAA+B,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;AACxK,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,4BAA4B,GAAG,YAAY;AACxE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,sBAAsB,CAAC,IAAI,EAAE,+BAA+B,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACtK,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,qCAAqC,GAAG,YAAY;AACjF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,0BAA0B,CAAC,IAAI,EAAE,+BAA+B,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;AAC9K,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,qCAAqC,GAAG,YAAY;AACjF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,0BAA0B,CAAC,IAAI,EAAE,+BAA+B,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;AAC9K,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,wCAAwC,GAAG,YAAY;AACpF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,6BAA6B,CAAC,IAAI,EAAE,+BAA+B,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC;AACpL,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,mCAAmC,GAAG,YAAY;AAC/E,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,wBAAwB,CAAC,IAAI,EAAE,+BAA+B,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;AAC1K,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,6BAA6B,GAAG,YAAY;AACzE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,kBAAkB,CAAC,IAAI,EAAE,+BAA+B,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAC9J,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,oCAAoC,GAAG,YAAY;AAChF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,yBAAyB,CAAC,IAAI,EAAE,+BAA+B,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;AAC5K,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,wBAAwB,GAAG,YAAY;AACpE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,aAAa,CAAC,IAAI,EAAE,+BAA+B,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpJ,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,wBAAwB,GAAG,YAAY;AACpE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,aAAa,CAAC,IAAI,EAAE,+BAA+B,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpJ,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,4CAA4C,GAAG,YAAY;AACxF,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,gCAAgC,CAAC,IAAI,EAAE,+BAA+B,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;AAC1L,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,sCAAsC,GAAG,UAAU,iBAAiB,EAAE,OAAO,EAAE;AAC5G,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,2BAA2B,CAAC,IAAI,EAAE,+BAA+B,CAAC,2BAA2B,CAAC,IAAI,GAAG,oBAAoB,GAAG,iBAAiB,GAAG,aAAa,GAAG,OAAO,CAAC,CAAC;AACrP,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,4BAA4B,GAAG,YAAY;AACxE,QAAQ,OAAO,IAAI,wBAAwB,CAAC,+BAA+B,CAAC,iBAAiB,CAAC,IAAI,EAAE,+BAA+B,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC5J,KAAK,CAAC;AACN,IAAI,OAAO,wBAAwB,CAAC;AACpC,CAAC,CAAC,eAAe,CAAC;;;;","x_google_ignoreList":[0]}