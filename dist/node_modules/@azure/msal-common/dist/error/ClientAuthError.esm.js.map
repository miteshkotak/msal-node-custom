{"version":3,"file":"ClientAuthError.esm.js","sources":["../../../../../../node_modules/@azure/msal-common/dist/error/ClientAuthError.js"],"sourcesContent":["/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    tokenParsingError: {\r\n        code: \"token_parsing_error\",\r\n        desc: \"Token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: \"null_or_empty_token\",\r\n        desc: \"The token is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    networkError: {\r\n        code: \"network_error\",\r\n        desc: \"Network request failed. Please check network trace to determine root cause.\"\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: \"openid_config_error\",\r\n        desc: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state\",\r\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    stateNotFoundError: {\r\n        code: \"state_not_found\",\r\n        desc: \"State not found\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    nonceNotFoundError: {\r\n        code: \"nonce_not_found\",\r\n        desc: \"nonce not found\"\r\n    },\r\n    authTimeNotFoundError: {\r\n        code: \"auth_time_not_found\",\r\n        desc: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\r\n            \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\r\n            \" See https://aka.ms/msaljs/optional-claims for more information.\"\r\n    },\r\n    maxAgeTranspiredError: {\r\n        code: \"max_age_transpired\",\r\n        desc: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: \"multiple_matching_accounts\",\r\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: \"multiple_matching_appMetadata\",\r\n        desc: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: \"device_code_unknown_error\",\r\n        desc: \"Device code stopped polling for unknown reasons.\"\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: \"no_account_in_silent_request\",\r\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\r\n    },\r\n    invalidCacheRecord: {\r\n        code: \"invalid_cache_record\",\r\n        desc: \"Cache record object was null or undefined.\"\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: \"invalid_cache_environment\",\r\n        desc: \"Invalid environment when attempting to create cache entry\"\r\n    },\r\n    noAccountFound: {\r\n        code: \"no_account_found\",\r\n        desc: \"No account found in cache for given key.\"\r\n    },\r\n    CachePluginError: {\r\n        code: \"no cache plugin set on CacheManager\",\r\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\r\n    },\r\n    noCryptoObj: {\r\n        code: \"no_crypto_object\",\r\n        desc: \"No crypto object detected. This is required for the following operation: \"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    unexpectedAccountType: {\r\n        code: \"unexpected_account_type\",\r\n        desc: \"Unexpected account type.\"\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: \"unexpected_credential_type\",\r\n        desc: \"Unexpected credential type.\"\r\n    },\r\n    invalidAssertion: {\r\n        code: \"invalid_assertion\",\r\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\r\n    },\r\n    invalidClientCredential: {\r\n        code: \"invalid_client_credential\",\r\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: \"token_refresh_required\",\r\n        desc: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\"\r\n    },\r\n    userTimeoutReached: {\r\n        code: \"user_timeout_reached\",\r\n        desc: \"User defined timeout for device code polling reached\",\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: \"token_claims_cnf_required_for_signedjwt\",\r\n        desc: \"Cannot generate a POP jwt if the token_claims are not populated\"\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: \"authorization_code_missing_from_server_response\",\r\n        desc: \"Server response does not contain an authorization code to proceed\"\r\n    },\r\n    noAzureRegionDetected: {\r\n        code: \"no_azure_region_detected\",\r\n        desc: \"No azure region was detected and no fallback was made available\"\r\n    },\r\n    accessTokenEntityNullError: {\r\n        code: \"access_token_entity_null\",\r\n        desc: \"Access token entity is null, please check logs and cache to ensure a valid access token is present.\"\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: \"binding_key_not_removed\",\r\n        desc: \"Could not remove the credential's binding key from storage.\"\r\n    },\r\n    logoutNotSupported: {\r\n        code: \"end_session_endpoint_not_supported\",\r\n        desc: \"Provided authority does not support logout.\"\r\n    },\r\n    keyIdMissing: {\r\n        code: \"key_id_missing\",\r\n        desc: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\"\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: \"no_network_connectivity\",\r\n        desc: \"No network connectivity. Check your internet connection.\"\r\n    },\r\n    userCanceledError: {\r\n        code: \"user_canceled\",\r\n        desc: \"User canceled the flow.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, \"\" + ClientAuthErrorMessage.clientInfoEmptyError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenParsingError.code, ClientAuthErrorMessage.tokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyToken.code, ClientAuthErrorMessage.nullOrEmptyToken.desc + \" Raw Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the fetch client throws\r\n     */\r\n    ClientAuthError.createNetworkError = function (endpoint, errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.networkError.code, ClientAuthErrorMessage.networkError.desc + \" | Fetch client threw: \" + errDetail + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the openid-configuration endpoint cannot be reached or does not contain the required data\r\n     */\r\n    ClientAuthError.createUnableToGetOpenidConfigError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unableToGetOpenidConfigError.code, ClientAuthErrorMessage.unableToGetOpenidConfigError.desc + \" Attempted to retrieve endpoints from: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param hashParamObj\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state cannot be parsed.\r\n     * @param invalidState\r\n     */\r\n    ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state is not present\r\n     * @param missingState\r\n     */\r\n    ClientAuthError.createStateNotFoundError = function (missingState) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateNotFoundError.code, ClientAuthErrorMessage.stateNotFoundError.desc + \":  \" + missingState);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when max_age was provided in the request, but auth_time is not in the token claims\r\n     * @param missingNonce\r\n     */\r\n    ClientAuthError.createAuthTimeNotFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.authTimeNotFoundError.code, ClientAuthErrorMessage.authTimeNotFoundError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when too much time has elapsed since the last end-user authentication\r\n     */\r\n    ClientAuthError.createMaxAgeTranspiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.maxAgeTranspiredError.code, ClientAuthErrorMessage.maxAgeTranspiredError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the mnonce is not present\r\n     * @param missingNonce\r\n     */\r\n    ClientAuthError.createNonceNotFoundError = function (missingNonce) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceNotFoundError.code, ClientAuthErrorMessage.nonceNotFoundError.desc + \":  \" + missingNonce);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache.\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when multiple accounts are in cache for the given params\r\n     */\r\n    ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple appMetada are in cache for the given clientId.\r\n     */\r\n    ClientAuthError.createMultipleMatchingAppMetadataInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAppMetadata.code, ClientAuthErrorMessage.multipleMatchingAppMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, \"\" + ClientAuthErrorMessage.emptyInputScopeSetError.desc);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeUnknownError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeUnknownError.code, \"\" + ClientAuthErrorMessage.DeviceCodeUnknownError.desc);\r\n    };\r\n    /**\r\n     * Throws error when silent requests are made without an account object\r\n     */\r\n    ClientAuthError.createNoAccountInSilentRequestError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when cache record is null or undefined.\r\n     */\r\n    ClientAuthError.createNullOrUndefinedCacheRecord = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n     */\r\n    ClientAuthError.createInvalidCacheEnvironmentError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\r\n    };\r\n    /**\r\n     * Throws error when account is not found in cache.\r\n     */\r\n    ClientAuthError.createNoAccountFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\r\n    };\r\n    /**\r\n     * Throws error if ICachePlugin not set on CacheManager.\r\n     */\r\n    ClientAuthError.createCachePluginError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\r\n    };\r\n    /**\r\n     * Throws error if crypto object not found.\r\n     * @param operationName\r\n     */\r\n    ClientAuthError.createNoCryptoObjectError = function (operationName) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\r\n    };\r\n    /**\r\n     * Throws error if cache type is invalid.\r\n     */\r\n    ClientAuthError.createInvalidCacheTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n     * Throws error if unexpected account type.\r\n     */\r\n    ClientAuthError.createUnexpectedAccountTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\r\n    };\r\n    /**\r\n     * Throws error if unexpected credential type.\r\n     */\r\n    ClientAuthError.createUnexpectedCredentialTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\r\n    };\r\n    /**\r\n     * Throws error if client assertion is not valid.\r\n     */\r\n    ClientAuthError.createInvalidAssertionError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, \"\" + ClientAuthErrorMessage.invalidAssertion.desc);\r\n    };\r\n    /**\r\n     * Throws error if client assertion is not valid.\r\n     */\r\n    ClientAuthError.createInvalidCredentialError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, \"\" + ClientAuthErrorMessage.invalidClientCredential.desc);\r\n    };\r\n    /**\r\n     * Throws error if token cannot be retrieved from cache due to refresh being required.\r\n     */\r\n    ClientAuthError.createRefreshRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRefreshRequired.code, ClientAuthErrorMessage.tokenRefreshRequired.desc);\r\n    };\r\n    /**\r\n     * Throws error if the user defined timeout is reached.\r\n     */\r\n    ClientAuthError.createUserTimeoutReachedError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userTimeoutReached.code, ClientAuthErrorMessage.userTimeoutReached.desc);\r\n    };\r\n    /*\r\n     * Throws error if token claims are not populated for a signed jwt generation\r\n     */\r\n    ClientAuthError.createTokenClaimsRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenClaimsRequired.code, ClientAuthErrorMessage.tokenClaimsRequired.desc);\r\n    };\r\n    /**\r\n     * Throws error when the authorization code is missing from the server response\r\n     */\r\n    ClientAuthError.createNoAuthCodeInServerResponseError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAuthorizationCodeFromServer.code, ClientAuthErrorMessage.noAuthorizationCodeFromServer.desc);\r\n    };\r\n    ClientAuthError.createBindingKeyNotRemovedError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.bindingKeyNotRemovedError.code, ClientAuthErrorMessage.bindingKeyNotRemovedError.desc);\r\n    };\r\n    /**\r\n     * Thrown when logout is attempted for an authority that doesnt have an end_session_endpoint\r\n     */\r\n    ClientAuthError.createLogoutNotSupportedError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.logoutNotSupported.code, ClientAuthErrorMessage.logoutNotSupported.desc);\r\n    };\r\n    /**\r\n     * Create an error when kid attribute is missing from a PoP token's cache record\r\n     */\r\n    ClientAuthError.createKeyIdMissingError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.keyIdMissing.code, ClientAuthErrorMessage.keyIdMissing.desc);\r\n    };\r\n    /**\r\n     * Create an error when the client does not have network connectivity\r\n     */\r\n    ClientAuthError.createNoNetworkConnectivityError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noNetworkConnectivity.code, ClientAuthErrorMessage.noNetworkConnectivity.desc);\r\n    };\r\n    /**\r\n     * Create an error when the user cancels the flow\r\n     */\r\n    ClientAuthError.createUserCanceledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userCanceledError.code, ClientAuthErrorMessage.userCanceledError.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\nexport { ClientAuthError, ClientAuthErrorMessage };\n//# sourceMappingURL=ClientAuthError.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}